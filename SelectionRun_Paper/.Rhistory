install.packages(ape,adephylo)
install.packages("ape","adephylo")
x<-seq(1,100)
y<-2^x
plot(x,y)
x<-seq(0,1,by(0.001))
?seq
x<-seq(0,1,by=0.001)
y<-2^x
plot(x,y)
y<-2^-x
plot(x,y)
y<-x^2
plot(x,y)
y<--x^2
plot(x,y)
y<-(-x)^2
plot(x,y)
setwd("C:/WSL2_Shared/Retikulos_results/Paper_serial_run_Jan9-23/proper_job/strong_Sel/#")
setwd("C:/WSL2_Shared/Retikulos_results/Paper_serial_run_Jan9-23/proper_job/strong_Sel/")
tree_files<-list.files(pattern = "treefile")
library(ape)
tr_list<-list()
for (i in 1:length(tree_files)) { tr_list[[i]]<-read.tree(tree_files[i])}
windowsFonts(C="Courier New")
names<-c()
for (i in 1:5) {
names<-c(names,paste("Gene",i))
}
png("Trees.png",width=11,height=8.5,units="in",res=300)
par(mfrow=c(2,3),mar=c(1.0,1.0,1.0,1.0))
for (i in 1:length(tr_list)) {
plot.phylo(tr_list[[i]],x.lim = c(0,0.5),main=names[i],edge.width = 3,cex=1.2, family="C")
if (i == 1) {
add.scale.bar(length=0.1,x=0.1,y=1.2)
}
}
dev.off()
tree_files<-list.files(pattern = "treefile")
library(ape)
tr_list<-list()
for (i in 1:length(tree_files)) { tr_list[[i]]<-read.tree(tree_files[i])}
windowsFonts(C="Courier New")
names<-c()
for (i in 1:5) {
names<-c(names,paste("Gene",i))
}
png("Gene_trees.png",width=11,height=8.5,units="in",res=300)
par(mfrow=c(2,3),mar=c(1.0,1.0,1.0,1.0))
for (i in 1:length(tr_list)) {
plot.phylo(tr_list[[i]],x.lim = c(0,0.5),main=names[i],edge.width = 3,cex=1.2, family="C")
if (i == 1) {
add.scale.bar(length=0.1,x=0.1,y=1.2)
}
}
dev.off()
tree_files<-list.files(pattern = "treefile")
library(ape)
tr_list<-list()
for (i in 1:length(tree_files)) { tr_list[[i]]<-read.tree(tree_files[i])}
windowsFonts(C="Courier New")
names<-c()
for (i in 1:5) {
names<-c(names,paste("Gene",i))
}
pdf("Gene_trees.pdf",width=11,height=8.5,units="in",res=300)
par(mfrow=c(2,3),mar=c(1.0,1.0,1.0,1.0))
for (i in 1:length(tr_list)) {
plot.phylo(tr_list[[i]],x.lim = c(0,0.5),main=names[i],edge.width = 3,cex=1.2, family="C")
if (i == 1) {
add.scale.bar(length=0.1,x=0.1,y=1.2)
}
}
dev.off()
# making the gene trees
tree_files<-list.files(pattern = "treefile")
library(ape)
tr_list<-list()
for (i in 1:length(tree_files)) { tr_list[[i]]<-read.tree(tree_files[i])}
windowsFonts(C="Courier New")
names<-c()
for (i in 1:5) {
names<-c(names,paste("Gene",i))
}
pdf("Gene_trees.pdf",width=11,height=8.5) # for using 'png()', add: units="in",res=300)
par(mfrow=c(2,3),mar=c(1.0,1.0,1.0,1.0))
for (i in 1:length(tr_list)) {
plot.phylo(tr_list[[i]],x.lim = c(0,0.5),main=names[i],edge.width = 3,cex=1.2, family="C")
if (i == 1) {
add.scale.bar(length=0.1,x=0.1,y=1.2)
}
}
dev.off()
tree_files<-list.files(pattern = "treefile")
library(ape)
tr_list<-list()
for (i in 1:length(tree_files)) { tr_list[[i]]<-read.tree(tree_files[i])}
windowsFonts(C="Courier New")
names<-c()
for (i in 1:5) {
names<-c(names,paste("Gene",i))
}
#pdf("Gene_trees.pdf",width=11,height=8.5) # for using 'png()', add: units="in",res=300)
par(mfrow=c(2,3),mar=c(1.0,1.0,1.0,1.0))
for (i in 1:length(tr_list)) {
plot.phylo(tr_list[[i]],x.lim = c(0,0.5),main=names[i],edge.width = 3,cex=1.2, family="C")
if (i == 1) {
add.scale.bar(length=0.1,x=0.1,y=1.2)
}
}
#dev.off()
setwd("../totes_relaxed/")
tree_files<-list.files(pattern = "treefile")
library(ape)
tr_list<-list()
for (i in 1:length(tree_files)) { tr_list[[i]]<-read.tree(tree_files[i])}
windowsFonts(C="Courier New")
names<-c()
for (i in 1:5) {
names<-c(names,paste("Gene",i))
}
png("Gene_trees.pdf",width=11,height=8.5, units="in",res=300)
par(mfrow=c(2,3),mar=c(1.0,1.0,1.0,1.0))
for (i in 1:length(tr_list)) {
plot.phylo(tr_list[[i]],x.lim = c(0,0.5),main=names[i],edge.width = 3,cex=1.2, family="C")
if (i == 1) {
add.scale.bar(length=0.1,x=0.1,y=1.2)
}
}
dev.off()
tree_files<-list.files(pattern = "treefile")
library(ape)
tr_list<-list()
for (i in 1:length(tree_files)) { tr_list[[i]]<-read.tree(tree_files[i])}
windowsFonts(C="Courier New")
names<-c()
for (i in 1:5) {
names<-c(names,paste("Gene",i))
}
png("Gene_trees.png",width=11,height=8.5, units="in",res=300)
par(mfrow=c(2,3),mar=c(1.0,1.0,1.0,1.0))
for (i in 1:length(tr_list)) {
plot.phylo(tr_list[[i]],x.lim = c(0,0.5),main=names[i],edge.width = 3,cex=1.2, family="C")
if (i == 1) {
add.scale.bar(length=0.1,x=0.1,y=1.2)
}
}
dev.off()
setwd("../strong_Sel//")
grn_files<-list.files(pattern = "meanGRNs")
ancab_grns<-read.table(grn_files[[3]],sep=",",row.names="V1",header=F)
anccd_grns<-read.table(grn_files[[6]],sep=",",row.names="V1",header=F)
lina_grns<-read.table(grn_files[[1]],sep=",",row.names="V1",header=F)
linb_grns<-read.table(grn_files[[2]],sep=",",row.names="V1",header=F)
linc_grns<-read.table(grn_files[[4]],sep=",",row.names="V1",header=F)
lind_grns<-read.table(grn_files[[5]],sep=",",row.names="V1",header=F)
lina_progress<-rbind(ancab_grns,lina_grns)
linb_progress<-rbind(ancab_grns,linb_grns)
linc_progress<-rbind(anccd_grns,linc_grns)
lind_progress<-rbind(anccd_grns,lind_grns)
palette<-rainbow(n=ncol(linc_progress))
names=c("Lineage A","Lineage B","Lineage C","Lineage D")
organized_datasets<-list(lina_progress,linb_progress,linc_progress,lind_progress)
#png("Reg_values_progression.png",width=11,height=8.5,units="in",res=300)
par(mfrow=c(2,2),mar=c(4,4,4,4))
for (i in 1:4) {
curr_data=organized_datasets[[i]]
title<-names[i]
plot(x=1:nrow(curr_data),y=curr_data[,1],ylim=c(-max(abs(curr_data)),max(abs(curr_data))),xlim=c(0,nrow(curr_data)),type="l",xlab="Generation (X100)",ylab="GRN link value",main=title)
for (i in 2:ncol(curr_data)) {
lines(x=1:202, y=curr_data[,i], col=palette[i])
}
}
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
#png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
#png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
par(mfrow=c(1,1),mar=c(4,4,4,4))
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
#png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,y=0.75,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.5)
grn_files<-list.files(pattern = "meanGRNs")
ancab_grns<-read.table(grn_files[[3]],sep=",",row.names="V1",header=F)
anccd_grns<-read.table(grn_files[[6]],sep=",",row.names="V1",header=F)
lina_grns<-read.table(grn_files[[1]],sep=",",row.names="V1",header=F)
linb_grns<-read.table(grn_files[[2]],sep=",",row.names="V1",header=F)
linc_grns<-read.table(grn_files[[4]],sep=",",row.names="V1",header=F)
lind_grns<-read.table(grn_files[[5]],sep=",",row.names="V1",header=F)
lina_progress<-rbind(ancab_grns,lina_grns)
linb_progress<-rbind(ancab_grns,linb_grns)
linc_progress<-rbind(anccd_grns,linc_grns)
lind_progress<-rbind(anccd_grns,lind_grns)
palette<-rainbow(n=ncol(linc_progress))
names=c("Lineage A","Lineage B","Lineage C","Lineage D")
organized_datasets<-list(lina_progress,linb_progress,linc_progress,lind_progress)
png("Reg_values_progression.png",width=11,height=8.5,units="in",res=300)
par(mfrow=c(2,2),mar=c(4,4,4,4))
for (i in 1:4) {
curr_data=organized_datasets[[i]]
title<-names[i]
plot(x=1:nrow(curr_data),y=curr_data[,1],ylim=c(-max(abs(curr_data)),max(abs(curr_data))),xlim=c(0,nrow(curr_data)),type="l",xlab="Generation (X100)",ylab="GRN link value",main=title)
for (i in 2:ncol(curr_data)) {
lines(x=1:202, y=curr_data[,i], col=palette[i])
}
}
dev.off()
grn_files<-list.files(pattern = "meanGRNs")
ancab_grns<-read.table(grn_files[[3]],sep=",",row.names="V1",header=F)
anccd_grns<-read.table(grn_files[[6]],sep=",",row.names="V1",header=F)
lina_grns<-read.table(grn_files[[1]],sep=",",row.names="V1",header=F)
linb_grns<-read.table(grn_files[[2]],sep=",",row.names="V1",header=F)
linc_grns<-read.table(grn_files[[4]],sep=",",row.names="V1",header=F)
lind_grns<-read.table(grn_files[[5]],sep=",",row.names="V1",header=F)
lina_progress<-rbind(ancab_grns,lina_grns)
linb_progress<-rbind(ancab_grns,linb_grns)
linc_progress<-rbind(anccd_grns,linc_grns)
lind_progress<-rbind(anccd_grns,lind_grns)
palette<-rainbow(n=ncol(linc_progress))
names=c("Lineage A","Lineage B","Lineage C","Lineage D")
organized_datasets<-list(lina_progress,linb_progress,linc_progress,lind_progress)
png("Reg_values_progression.png",width=11,height=8.5,units="in",res=300)
par(mfrow=c(2,2),mar=c(4,4,4,4))
for (i in 1:4) {
curr_data=organized_datasets[[i]]
title<-names[i]
plot(x=1:nrow(curr_data),y=curr_data[,1],ylim=c(-max(abs(curr_data)),max(abs(curr_data))),xlim=c(0,nrow(curr_data)),type="l",xlab="Generation (X100)",ylab="GRN link value",main=title)
for (i in 2:ncol(curr_data)) {
lines(x=1:202, y=curr_data[,i], col=palette[i])
}
}
dev.off()
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
par(mfrow=c(1,1),mar=c(4,4,4,4))
png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.5)
dev.off()
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
par(mfrow=c(1,1),mar=c(4,4,4,4))
png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,y=0.75,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.5)
dev.off()
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
par(mfrow=c(1,1),mar=c(4,4,4,4))
png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,y=0.75,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.7)
dev.off()
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
par(mfrow=c(1,1),mar=c(4,4,4,4))
#png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,y=0.75,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.7)
setwd("../totes_relaxed/")
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
par(mfrow=c(1,1),mar=c(4,4,4,4))
#png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,y=0.75,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.7)
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
par(mfrow=c(1,1),mar=c(4,4,4,4))
#png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,y=0.4,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.7)
#dev.off()
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
par(mfrow=c(1,1),mar=c(4,4,4,4))
#png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,y=0.41,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.7)
#dev.off()
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
par(mfrow=c(1,1),mar=c(4,4,4,4))
#png("Fitness_progression.png",width=8,height=8,units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,y=0.43,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.7)
#dev.off()
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
par(mfrow=c(1,1),mar=c(4,4,4,4))
svg("Fitness_progression_2.svg",width=8,height=8# Additional args for a png(),units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,y=0.43,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.7)
dev.off()
files_in<-list.files(pattern = "fitness")
tables_list<-list()
for (i in 1:length(files_in)) { tables_list[[i]]<-read.table(files_in[i],sep=",",header=F) }
ancs<-list(tables_list[[3]],tables_list[[6]])
tips<-list(tables_list[[1]],tables_list[[2]],tables_list[[4]],tables_list[[5]])
all_vals<-c(ancs[[1]]$V1,ancs[[2]]$V1,tips[[1]]$V1,tips[[2]]$V1,tips[[3]]$V1,tips[[4]]$V1)
y_min<-min(all_vals)-0.1
par(mfrow=c(1,1),mar=c(4,4,4,4))
svg("Fitness_progression_2.svg",width=8,height=8# Additional args for a png(),units="in",res=300)
plot(1:101,ancs[[1]]$V1,type="l",col="red",ylab="Population mean fitness",xlab="Generation num (X100)",xlim=c(0,200),ylim=c(y_min,1),lwd=3)
lines(1:101,ancs[[2]]$V1, col="green", lwd=2) # lines that are plotted above other lines should be thinner, to show the other one behind
lines(102:202,tips[[1]]$V1, col="purple",lwd=3)
lines(102:202,tips[[2]]$V1, col="cyan",lwd=2)
lines(102:202,tips[[3]]$V1, col="magenta",lwd=3)
lines(102:202,tips[[4]]$V1, col="black",lwd=2)
abline(v=101,col="orange",lwd=1) # a vertical line showing the split in lineages
legend(x=150,y=0.43,legend=c("(A,B) ancestor","(C,D) ancestor", "Lineage A","Lineage B","Lineage C","Lineage D","Split"),fill=c("red","green","purple","cyan","magenta","black","orange"),cex=0.7)
dev.off()
tree_files<-list.files(pattern = "treefile")
library(ape)
tr_list<-list()
for (i in 1:length(tree_files)) { tr_list[[i]]<-read.tree(tree_files[i])}
windowsFonts(C="Courier New")
names<-c()
for (i in 1:5) {
names<-c(names,paste("Gene",i))
}
svg("Gene_trees.svg",width=11,height=8.5)#, units="in",res=300)
par(mfrow=c(2,3),mar=c(1.0,1.0,1.0,1.0))
for (i in 1:length(tr_list)) {
plot.phylo(tr_list[[i]],x.lim = c(0,0.5),main=names[i],edge.width = 3,cex=1.2, family="C")
if (i == 1) {
add.scale.bar(length=0.1,x=0.1,y=1.2)
}
}
dev.off()
setwd("../strong_Sel/")
tree_files<-list.files(pattern = "treefile")
library(ape)
tr_list<-list()
for (i in 1:length(tree_files)) { tr_list[[i]]<-read.tree(tree_files[i])}
windowsFonts(C="Courier New")
names<-c()
for (i in 1:5) {
names<-c(names,paste("Gene",i))
}
svg("Gene_trees.svg",width=11,height=8.5)#, units="in",res=300)
par(mfrow=c(2,3),mar=c(1.0,1.0,1.0,1.0))
for (i in 1:length(tr_list)) {
plot.phylo(tr_list[[i]],x.lim = c(0,0.5),main=names[i],edge.width = 3,cex=1.2, family="C")
if (i == 1) {
add.scale.bar(length=0.1,x=0.1,y=1.2)
}
}
dev.off()
